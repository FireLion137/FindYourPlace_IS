package com.is.findyourplace.System;// Generated by Selenium IDE
import com.is.findyourplace.persistence.repository.NotificaRepository;
import com.is.findyourplace.persistence.repository.UtenteRepository;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import java.time.Duration;
import java.util.*;
@SpringBootTest()
public class TC21Test {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @BeforeEach
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
    driver.get("http://localhost:8080/accountAuth");
    driver.manage().window().setSize(new Dimension(2556, 1398));
    driver.findElement(By.id("usernameLogin")).sendKeys("ADMIN_ALE");
    driver.findElement(By.id("passwordLogin")).sendKeys("ADMINALEx1!");
    driver.findElement(By.cssSelector(".form-submitButton:nth-child(4)")).click();
  }
  @AfterEach
  public void tearDown() {
    driver.quit();
  }
  @Autowired
  private NotificaRepository notificaRepository;

  @Autowired
  private UtenteRepository utenteRepository;

  @Test
  public void tC212() {
    String username=utenteRepository.findByIdUtente(2L).getUsername();
    driver.get("http://localhost:8080/admin/users?continue");
    driver.manage().window().setSize(new Dimension(2576, 1416));
    driver.findElement(By.id("Button-form-notification"+username)).click();
    driver.findElement(By.id("testoSendnot"+username)).sendKeys("t");
    driver.findElement(By.id("SubmitNot"+username)).click();
    assertEquals(driver.switchTo().alert().getText(), "Il testo non rispecchia il formato corretto. Riprovare!");
   // driver.close();
  }
  @Test
  public void tC211() {
    String username=utenteRepository.findByIdUtente(2L).getUsername();
    driver.get("http://localhost:8080/admin/users?continue");
    driver.manage().window().setSize(new Dimension(2576, 1416));
    driver.findElement(By.id("Button-form-notification"+username)).click();
    driver.findElement(By.id("testoSendnot"+username)).sendKeys("test notifica");
    js.executeScript("document.getElementById('destinatarioSendnot"+username+"').setAttribute('value','ihwsaogivhWSIHTEAHPIEATD0HE')");
    driver.findElement(By.id("SubmitNot"+username)).click();
    assertFalse(driver.findElements(By.id("destinatarioSendnot"+username + "Error")).isEmpty());
    // driver.close();
  }
  @Test
  public void tC215() {
    String username=utenteRepository.findByIdUtente(2L).getUsername();
    driver.get("http://localhost:8080/admin/users?continue");
    driver.manage().window().setSize(new Dimension(2576, 1416));
    String autore=driver.findElement(By.id("autoreSendnot"+username)).getAttribute("value");
    driver.findElement(By.id("Button-form-notification"+username)).click();
    driver.findElement(By.id("testoSendnot"+username)).sendKeys("test notifica");
    driver.findElement(By.id("SubmitNot"+username)).click();

    new WebDriverWait(driver, Duration.ofSeconds(5))
            .until(ExpectedConditions.urlToBe("http://localhost:8080/admin/users?continue"));
    notificaRepository.deleteById(notificaRepository.findFirstByAutoreAndTestoOrderByDataInvio(autore,"test notifica").getIdNotifica());
    assertEquals("http://localhost:8080/admin/users?continue", driver.getCurrentUrl());

    //driver.close();
  }
}
